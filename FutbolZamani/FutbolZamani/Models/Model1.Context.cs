//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FutbolZamani.Models
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class FutbolZamaniEntities1 : DbContext
    {
        public FutbolZamaniEntities1()
            : base("name=FutbolZamaniEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Arkadas> Arkadas { get; set; }
        public virtual DbSet<Etkinlik> Etkinlik { get; set; }
        public virtual DbSet<EtkinlikKatilim> EtkinlikKatilim { get; set; }
        public virtual DbSet<Kullanici> Kullanici { get; set; }
        public virtual DbSet<KullaniciProfil> KullaniciProfil { get; set; }
        public virtual DbSet<sysdiagrams> sysdiagrams { get; set; }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int spArkadasIstek(Nullable<int> arkID, Nullable<int> kulID, Nullable<bool> durum)
        {
            var arkIDParameter = arkID.HasValue ?
                new ObjectParameter("arkID", arkID) :
                new ObjectParameter("arkID", typeof(int));
    
            var kulIDParameter = kulID.HasValue ?
                new ObjectParameter("kulID", kulID) :
                new ObjectParameter("kulID", typeof(int));
    
            var durumParameter = durum.HasValue ?
                new ObjectParameter("durum", durum) :
                new ObjectParameter("durum", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spArkadasIstek", arkIDParameter, kulIDParameter, durumParameter);
        }
    
        public virtual int spArkadasOlustur(Nullable<int> kulID, Nullable<int> arkID, Nullable<bool> durum)
        {
            var kulIDParameter = kulID.HasValue ?
                new ObjectParameter("kulID", kulID) :
                new ObjectParameter("kulID", typeof(int));
    
            var arkIDParameter = arkID.HasValue ?
                new ObjectParameter("arkID", arkID) :
                new ObjectParameter("arkID", typeof(int));
    
            var durumParameter = durum.HasValue ?
                new ObjectParameter("durum", durum) :
                new ObjectParameter("durum", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spArkadasOlustur", kulIDParameter, arkIDParameter, durumParameter);
        }
    
        public virtual int spArkadasSil(Nullable<int> kulID, Nullable<int> arkID, Nullable<bool> durum)
        {
            var kulIDParameter = kulID.HasValue ?
                new ObjectParameter("kulID", kulID) :
                new ObjectParameter("kulID", typeof(int));
    
            var arkIDParameter = arkID.HasValue ?
                new ObjectParameter("arkID", arkID) :
                new ObjectParameter("arkID", typeof(int));
    
            var durumParameter = durum.HasValue ?
                new ObjectParameter("durum", durum) :
                new ObjectParameter("durum", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spArkadasSil", kulIDParameter, arkIDParameter, durumParameter);
        }
    
        public virtual int spEtkinlikOluştur(string etkinlikAdr, Nullable<System.DateTime> etkinlikTar, Nullable<int> kulID, Nullable<int> etkinlikKontenjan, string etkinlikBilgi)
        {
            var etkinlikAdrParameter = etkinlikAdr != null ?
                new ObjectParameter("etkinlikAdr", etkinlikAdr) :
                new ObjectParameter("etkinlikAdr", typeof(string));
    
            var etkinlikTarParameter = etkinlikTar.HasValue ?
                new ObjectParameter("etkinlikTar", etkinlikTar) :
                new ObjectParameter("etkinlikTar", typeof(System.DateTime));
    
            var kulIDParameter = kulID.HasValue ?
                new ObjectParameter("kulID", kulID) :
                new ObjectParameter("kulID", typeof(int));
    
            var etkinlikKontenjanParameter = etkinlikKontenjan.HasValue ?
                new ObjectParameter("etkinlikKontenjan", etkinlikKontenjan) :
                new ObjectParameter("etkinlikKontenjan", typeof(int));
    
            var etkinlikBilgiParameter = etkinlikBilgi != null ?
                new ObjectParameter("etkinlikBilgi", etkinlikBilgi) :
                new ObjectParameter("etkinlikBilgi", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spEtkinlikOluştur", etkinlikAdrParameter, etkinlikTarParameter, kulIDParameter, etkinlikKontenjanParameter, etkinlikBilgiParameter);
        }
    
        public virtual int spKullaniciOlustur(string kulUser, string kulAd, string kulSoyad, string kulTel, string kulAdres, string kulMail, string kulSifre)
        {
            var kulUserParameter = kulUser != null ?
                new ObjectParameter("kulUser", kulUser) :
                new ObjectParameter("kulUser", typeof(string));
    
            var kulAdParameter = kulAd != null ?
                new ObjectParameter("kulAd", kulAd) :
                new ObjectParameter("kulAd", typeof(string));
    
            var kulSoyadParameter = kulSoyad != null ?
                new ObjectParameter("kulSoyad", kulSoyad) :
                new ObjectParameter("kulSoyad", typeof(string));
    
            var kulTelParameter = kulTel != null ?
                new ObjectParameter("kulTel", kulTel) :
                new ObjectParameter("kulTel", typeof(string));
    
            var kulAdresParameter = kulAdres != null ?
                new ObjectParameter("kulAdres", kulAdres) :
                new ObjectParameter("kulAdres", typeof(string));
    
            var kulMailParameter = kulMail != null ?
                new ObjectParameter("kulMail", kulMail) :
                new ObjectParameter("kulMail", typeof(string));
    
            var kulSifreParameter = kulSifre != null ?
                new ObjectParameter("kulSifre", kulSifre) :
                new ObjectParameter("kulSifre", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("spKullaniciOlustur", kulUserParameter, kulAdParameter, kulSoyadParameter, kulTelParameter, kulAdresParameter, kulMailParameter, kulSifreParameter);
        }
    }
}
